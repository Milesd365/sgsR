// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calcFijPairwiseCpp
float calcFijPairwiseCpp(NumericMatrix ref_gen, NumericMatrix alfreq1, NumericMatrix alfreq2, int Nloci, int Nallele, int n);
RcppExport SEXP sgsR_calcFijPairwiseCpp(SEXP ref_genSEXP, SEXP alfreq1SEXP, SEXP alfreq2SEXP, SEXP NlociSEXP, SEXP NalleleSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type ref_gen(ref_genSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alfreq1(alfreq1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alfreq2(alfreq2SEXP);
    Rcpp::traits::input_parameter< int >::type Nloci(NlociSEXP);
    Rcpp::traits::input_parameter< int >::type Nallele(NalleleSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(calcFijPairwiseCpp(ref_gen, alfreq1, alfreq2, Nloci, Nallele, n));
    return __result;
END_RCPP
}
// calcFijPopCpp
NumericMatrix calcFijPopCpp(NumericVector ids, NumericMatrix genotype_data, NumericMatrix ref_gen, int Nloci, int Nallele, int Nind, int Ngenecopies);
RcppExport SEXP sgsR_calcFijPopCpp(SEXP idsSEXP, SEXP genotype_dataSEXP, SEXP ref_genSEXP, SEXP NlociSEXP, SEXP NalleleSEXP, SEXP NindSEXP, SEXP NgenecopiesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type ids(idsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type genotype_data(genotype_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ref_gen(ref_genSEXP);
    Rcpp::traits::input_parameter< int >::type Nloci(NlociSEXP);
    Rcpp::traits::input_parameter< int >::type Nallele(NalleleSEXP);
    Rcpp::traits::input_parameter< int >::type Nind(NindSEXP);
    Rcpp::traits::input_parameter< int >::type Ngenecopies(NgenecopiesSEXP);
    __result = Rcpp::wrap(calcFijPopCpp(ids, genotype_data, ref_gen, Nloci, Nallele, Nind, Ngenecopies));
    return __result;
END_RCPP
}
// calcAlleleFreqPop
NumericVector calcAlleleFreqPop(NumericVector alleles_1, NumericVector alleles_2, int Nallele);
RcppExport SEXP sgsR_calcAlleleFreqPop(SEXP alleles_1SEXP, SEXP alleles_2SEXP, SEXP NalleleSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type alleles_1(alleles_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alleles_2(alleles_2SEXP);
    Rcpp::traits::input_parameter< int >::type Nallele(NalleleSEXP);
    __result = Rcpp::wrap(calcAlleleFreqPop(alleles_1, alleles_2, Nallele));
    return __result;
END_RCPP
}
// calcPairwiseDist
NumericMatrix calcPairwiseDist(NumericVector x, NumericVector y);
RcppExport SEXP sgsR_calcPairwiseDist(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    __result = Rcpp::wrap(calcPairwiseDist(x, y));
    return __result;
END_RCPP
}
